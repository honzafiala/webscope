{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  //let result = await USBDevice.transferIn(2, 256);\n  let result = await USBDevice.isochronousTransferIn(2, [1023]);\n  console.log(result);\n  return [0];\n  if (result.data == null) return null;\n  console.log('received', result.data.length, 'B');\n  let newData = result.data; // Parse the received data\n\n  let parsedData = [];\n\n  for (let i = 0; i < 64; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n\n  return parsedData;\n}\n\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([[0]]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [stop, setStop] = useState(false);\n  let [captured, setCaptured] = useState(0);\n  let [startTime, setStartTime] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n    let newData = await getData(USBDevice);\n\n    if (newData != null) {\n      data.push(newData);\n      setData(data);\n      console.log('read', newData.length, 'datapoints');\n      captured += 1023;\n      setCaptured(captured);\n    }\n  }\n\n  function startCapture() {\n    setStartTime(performance.now());\n    setInterval(readData, 1); //  readData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WebScope\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectDevice,\n      children: \"request device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCapture,\n      disabled: USBDevice == null,\n      children: \"read data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), \"Captured: \", Math.roucaptured / (performance.now() - startTime), \" kB/s\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(WebglAppSin, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tJ/a6BjaiKyA9ipE7CXC4WPRmDo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","Button","getData","USBDevice","result","isochronousTransferIn","console","log","data","length","newData","parsedData","i","val","getUint8","push","App","setData","setUSBDevice","stop","setStop","captured","setCaptured","startTime","setStartTime","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","readData","startCapture","performance","now","setInterval","Math","roucaptured","width"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport Button from 'react-bootstrap/Button';\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  //let result = await USBDevice.transferIn(2, 256);\n  let result = await USBDevice.isochronousTransferIn(2, [1023]);\n\n  console.log(result);\n\n  return [0];\n  if (result.data == null) return null;\n  console.log('received', result.data.length, 'B');\n  let newData = result.data;\n  // Parse the received data\n  let parsedData = [];\n  for (let i = 0; i < 64; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n  return parsedData;\n}\n\nexport default function App() {\n  let [data, setData] = useState([[0]]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [stop, setStop] = useState(false);\n  let [captured, setCaptured] = useState(0);\n  let [startTime, setStartTime] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n      let newData = await getData(USBDevice);\n      if (newData != null) {\n        data.push(newData);\n        setData(data);\n        console.log('read', newData.length, 'datapoints');\n        captured += 1023;\n        setCaptured(captured);\n      }\n  }\n\n  function startCapture() {\n    setStartTime(performance.now());\n   setInterval(readData, 1);\n   //  readData();\n  }\n  \n  return (\n    <div className='container'>\n      <h1>WebScope</h1>\n        <button onClick={connectDevice}>request device</button>\n        <button onClick={startCapture} disabled={USBDevice == null}>read data</button>\n         Captured: {Math.roucaptured  / (performance.now() - startTime)} kB/s\n      <div style={{ width: \"100%\" }}>\n         <WebglAppSin data={data}/>        \n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}