{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport ChannelControl from './ChannelControl';\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\nimport Plot from './Plot.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummyData = getDummyData();\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([]);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n    console.log(device);\n  }\n\n  function readLoop() {\n    setStart(performance.now());\n    USBDevice.transferIn(1, 32768).then(result => {\n      if (result.data.byteLength != 0) {\n        let newData = result.data; // Parse the received data\n\n        let parsedData = [];\n\n        for (let i = 0; i < result.data.byteLength; i++) {\n          let val = newData.getUint8(i);\n          parsedData.push(val);\n        }\n\n        data.push(parsedData);\n        setData(data);\n        if (smallData.length > 100) smallData.shift();\n        smallData.push(parsedData[0]);\n        setSmallData(smallData);\n      }\n\n      if (running) readLoop();\n    });\n  }\n\n  function startCapture() {\n    running = true;\n    setRunning(true);\n    readLoop();\n  }\n\n  let [clk, setClk] = useState(0);\n\n  async function sendConfig() {\n    function str2ab(str) {\n      var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n\n      var bufView = new Uint8Array(buf);\n\n      for (var i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n      }\n\n      return buf;\n    }\n\n    let config = {\n      clk_div: clk\n    };\n    let str = JSON.stringify(config);\n    console.log(str);\n    let buf = str2ab(str);\n    console.log(buf);\n    let result = await USBDevice.transferOut(1, buf);\n  }\n\n  function clkChange(event) {\n    let val = parseInt(event.target.value);\n    console.log(event.target.value);\n    if (!isNaN(val)) setClk(val);\n    if (event.target.value == '') setClk(0);\n  }\n\n  function stop() {\n    running = false;\n    setRunning(false);\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n  function Speed(_ref) {\n    let {\n      data,\n      start\n    } = _ref;\n    let kb = data / 1024;\n    let t = (performance.now() - start) / 1000;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: kb / t\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n  let [showPlot, setShowPlot] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"dog\",\n        children: [USBDevice == null ? \"❌\" : \"✅\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectDevice,\n        children: \"Request device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        disabled: USBDevice == null,\n        children: \"read data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendConfig,\n        children: \"send config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: clk,\n        size: \"5\",\n        onChange: clkChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowPlot(!showPlot);\n        },\n        children: \"plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), Math.round(data.length * 32768 / 1024), \" kB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: /*#__PURE__*/_jsxDEV(WebglAppSin, {\n          data: smallData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"1\",\n          color: \"#ffff0078\",\n          active: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"2\",\n          color: \"#00800069\",\n          active: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"3\",\n          color: \"#0000ff73\",\n          style: {\n            opacity: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RDHRsiaEZ72YdTb/LjkGtmQwk70=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","ChannelControl","Button","ColorRGBA","getDummyData","HorizontalControl","HoverBox","MeasurementBox","Plot","dummyData","App","data","setData","smallData","setSmallData","USBDevice","setUSBDevice","captured","setCaptured","start","setStart","interval","setInterval2","running","setRunning","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","console","log","readLoop","performance","now","transferIn","then","result","byteLength","newData","parsedData","i","val","getUint8","push","length","shift","startCapture","clk","setClk","sendConfig","str2ab","str","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","config","clk_div","JSON","stringify","transferOut","clkChange","event","parseInt","target","value","isNaN","stop","clearInterval","Speed","kb","t","showPlot","setShowPlot","Math","round","opacity"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport ChannelControl from './ChannelControl';\n\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\n\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\n\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\n\nimport Plot from './Plot.js';\n\nlet dummyData = getDummyData();\n\n\n\n\nexport default function App() {\n  let [data, setData] = useState([]);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n\n    console.log(device);\n  }\n\n\n  function readLoop() {\n    setStart(performance.now());\n    USBDevice.transferIn(1, 32768).then((result) => {\n\n\n      if (result.data.byteLength != 0) {\n      let newData = result.data;\n      // Parse the received data\n      let parsedData = [];\n      for (let i = 0; i < result.data.byteLength; i++) {\n        let val = newData.getUint8(i);\n        parsedData.push(val);\n      }\n\n        data.push(parsedData);\n        setData(data);\n\n      if (smallData.length > 100) smallData.shift();\n      smallData.push(parsedData[0]);\n      setSmallData(smallData);\n\n    }\n      if (running) readLoop();\n    });\n  }\n\n  function startCapture() {\n    running = true;\n    setRunning(true);\n    readLoop();\n  }\n\n  let [clk, setClk] = useState(0);\n  async function sendConfig() {\n    function str2ab(str) {\n      var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n      var bufView = new Uint8Array(buf);\n      for (var i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n      }\n      return buf;\n    }\n\n    let config = {\n      clk_div: clk\n    };\n\n    let str = JSON.stringify(config);\n    console.log(str);\n\n    let buf = str2ab(str);\n    console.log(buf);\n    let result = await USBDevice.transferOut(1, buf);\n\n  }\n\n  function clkChange(event) {\n    let val = parseInt(event.target.value);\n    console.log(event.target.value);\n    if (!isNaN(val)) setClk(val);\n    if (event.target.value == '') setClk(0);\n  }\n\n\n  function stop() {\n    running = false;\n    setRunning(false);\n\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n\n  function Speed({data, start}) {\n    let kb = data / 1024;\n    let t = (performance.now() - start) / 1000;\n    return (\n      <div>{kb/t}</div>\n    );\n  }\n\n  let [showPlot, setShowPlot] = useState(true);\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">\n      <span role=\"img\" aria-label=\"dog\">{USBDevice == null ? \"❌\" : \"✅\"} </span>\n      \n        <button onClick={connectDevice}>Request device</button>\n        <button onClick={startCapture} disabled={USBDevice == null}>read data</button>\n\n        <button onClick={stop}>stop</button>\n        <button onClick={sendConfig}>send config</button>\n        <input type=\"text\" value={clk} size=\"5\" onChange={clkChange}/>\n\n        <button onClick={() => {setShowPlot(!showPlot)}}>plot</button>\n\n        { Math.round(data.length * 32768 / 1024)} kB\n        \n\n\n        </div>\n      <div className=\"main\">\n        <div className='plot'>\n        <WebglAppSin data={smallData}/>\n       {/* <Plot data={data}/> */}\n\n        </div>\n        <div className='side'>\n          <ChannelControl number=\"1\" color=\"#ffff0078\" active=\"true\"/>\n          <ChannelControl number=\"2\" color=\"#00800069\" active=\"false\"/>\n          <ChannelControl number=\"3\" color=\"#0000ff73\" style={{opacity: 1}}/>\n         <HorizontalControl/>\n\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}