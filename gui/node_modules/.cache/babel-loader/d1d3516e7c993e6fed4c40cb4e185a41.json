{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver); // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n\n\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }), notifyOptions);\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    var _options$cancelRefetc;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    var _options$cancelRefetc2;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc2 = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc2 : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","map":{"version":3,"names":["_extends","_inheritsLoose","QueryObserver","hasNextPage","hasPreviousPage","infiniteQueryBehavior","InfiniteQueryObserver","_QueryObserver","client","options","call","_proto","prototype","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","behavior","getOptimisticResult","_options$cancelRefetc","fetch","cancelRefetch","throwOnError","meta","fetchMore","direction","pageParam","_options$cancelRefetc2","createResult","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","result","data","pages","isFetchingNextPage","isFetching","fetchMeta","isFetchingPreviousPage"],"sources":["/home/honza/node_modules/react-query/es/core/infiniteQueryObserver.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }), notifyOptions);\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    var _options$cancelRefetc;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    var _options$cancelRefetc2;\n\n    return this.fetch({\n      // TODO consider removing `?? true` in future breaking change, to be consistent with `refetch` API (see https://github.com/tannerlinsley/react-query/issues/2617)\n      cancelRefetch: (_options$cancelRefetc2 = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc2 : true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);"],"mappings":"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"},"metadata":{},"sourceType":"module"}