{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getAbortController, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n// CLASS\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.hadObservers = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.isFetching) {\n        if (this.hadObservers) {\n          this.scheduleGc();\n        }\n      } else {\n        this.cache.remove(this);\n      }\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n      this.hadObservers = true; // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4; // make sure that retries that were potentially cancelled due to unmounts can continue\n\n\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = ensureQueryKeyArray(this.queryKey);\n    var abortController = getAbortController(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false\n        }, !state.dataUpdatedAt && {\n          error: null,\n          status: 'loading'\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();","map":{"version":3,"names":["_extends","getAbortController","functionalUpdate","isValidTimeout","noop","replaceEqualDeep","timeUntilStale","ensureQueryKeyArray","notifyManager","getLogger","Retryer","isCancelledError","Query","config","abortSignalConsumed","hadObservers","defaultOptions","setOptions","options","observers","cache","queryKey","queryHash","initialState","state","getDefaultState","meta","scheduleGc","_proto","prototype","_this$options$cacheTi","cacheTime","Math","max","setDefaultOptions","_this","clearGcTimeout","gcTimeout","setTimeout","optionalRemove","clearTimeout","undefined","length","isFetching","remove","setData","updater","_this$options$isDataE","_this$options","prevData","data","isDataEqual","call","structuralSharing","dispatch","type","dataUpdatedAt","updatedAt","setState","setStateOptions","cancel","_this$retryer","promise","retryer","then","catch","Promise","resolve","destroy","silent","reset","isActive","some","observer","enabled","isStale","isInvalidated","getCurrentResult","isStaleByTime","staleTime","onFocus","_this$retryer2","find","x","shouldFetchOnWindowFocus","refetch","continue","onOnline","_this$retryer3","shouldFetchOnReconnect","addObserver","indexOf","push","notify","query","removeObserver","filter","isTransportCancelable","revert","cancelRetry","getObserversCount","invalidate","fetch","fetchOptions","_this2","_this$options$behavio","_context$fetchOptions","_abortController$abor","cancelRefetch","_this$retryer4","continueRetry","queryFn","abortController","queryFnContext","pageParam","Object","defineProperty","enumerable","get","signal","fetchFn","reject","context","behavior","onFetch","_this$options$behavio2","revertState","fetchMeta","_context$fetchOptions2","fn","abort","bind","onSuccess","onError","error","onFail","onPause","onContinue","retry","retryDelay","action","_this3","reducer","batch","forEach","onQueryUpdate","initialData","hasInitialData","initialDataUpdatedAt","hasData","dataUpdateCount","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","isPaused","status","_action$meta","_action$dataUpdatedAt"],"sources":["/home/honza/node_modules/react-query/es/core/query.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getAbortController, functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { getLogger } from './logger';\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\n\n// CLASS\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.hadObservers = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = _extends({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.isFetching) {\n        if (this.hadObservers) {\n          this.scheduleGc();\n        }\n      } else {\n        this.cache.remove(this);\n      }\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = replaceEqualDeep(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n      this.hadObservers = true; // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = ensureQueryKeyArray(this.queryKey);\n    var abortController = getAbortController(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!(isCancelledError(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!isCancelledError(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          getLogger().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return _extends({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return _extends({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return _extends({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return _extends({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false\n        }, !state.dataUpdatedAt && {\n          error: null,\n          status: 'loading'\n        });\n\n      case 'success':\n        return _extends({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if (isCancelledError(error) && error.revert && this.revertState) {\n          return _extends({}, this.revertState);\n        }\n\n        return _extends({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return _extends({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return _extends({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}