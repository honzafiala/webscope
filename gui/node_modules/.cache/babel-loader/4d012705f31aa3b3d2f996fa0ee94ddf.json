{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/webglAppSin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { getOverlayDirection } from \"react-bootstrap/esm/helpers\";\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet webglp;\nlet line;\nexport default function WebglAppSin(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const canvasMain = useRef(null);\n  useEffect(() => {\n    if (canvasMain.current) {\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width = canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height = canvasMain.current.clientHeight * devicePixelRatio;\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n      line = new WebglLine(new ColorRGBA(1, 0, 0, 1), numX);\n      webglp.addLine(line);\n      line.arrangeX();\n    }\n  }, []);\n  useEffect(() => {\n    let id = 0;\n\n    let renderPlot = () => {\n      let flatData = data.flat();\n      let max = 32;\n\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, 2 * flatData[Math.round(flatData.length * i / line.numPoints)] / max - 1);\n      }\n\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n\n    id = requestAnimationFrame(renderPlot);\n    return () => {\n      renderPlot = () => {};\n\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n  const canvasStyle = {\n    margin: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: canvasStyle,\n      ref: canvasMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebglAppSin, \"eerRSUIQXrqWLr9QmdFUEAin0qc=\");\n\n_c = WebglAppSin;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebglAppSin\");","map":{"version":3,"names":["React","useEffect","useRef","getOverlayDirection","WebglPlot","WebglLine","ColorRGBA","webglp","line","WebglAppSin","data","canvasMain","current","devicePixelRatio","window","width","clientWidth","height","clientHeight","numX","addLine","arrangeX","id","renderPlot","flatData","flat","max","i","numPoints","setY","Math","round","length","requestAnimationFrame","update","cancelAnimationFrame","canvasStyle","margin"],"sources":["/home/honza/webusb-test/src/webglAppSin.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { getOverlayDirection } from \"react-bootstrap/esm/helpers\";\n\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\n\nlet webglp;\nlet line;\n\n\nexport default function WebglAppSin({data}) {\n  const canvasMain = useRef(null);\n\n  useEffect(() => {\n    if (canvasMain.current) {\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width =\n        canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height =\n        canvasMain.current.clientHeight * devicePixelRatio;\n\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n\n      line = new WebglLine(new ColorRGBA(1, 0, 0, 1), numX);\n      webglp.addLine(line);\n\n      line.arrangeX();\n    }\n  }, []);\n\n  useEffect(() => {\n    let id = 0;\n    let renderPlot = () => {\n      let flatData = data.flat();\n      let max = 32\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, 2 * flatData[Math.round(flatData.length * i / line.numPoints)] / max  - 1);\n      }\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n    id = requestAnimationFrame(renderPlot);\n\n    return () => {\n      renderPlot = () => {};\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n\n  const canvasStyle = {\n    margin: 0,\n  };\n\n  return (\n    <div>\n      <canvas style={canvasStyle} ref={canvasMain} />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,mBAAT,QAAoC,6BAApC;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,SAA/B,QAAgD,YAAhD;;AAEA,IAAIC,MAAJ;AACA,IAAIC,IAAJ;AAGA,eAAe,SAASC,WAAT,OAA6B;EAAA;;EAAA,IAAR;IAACC;EAAD,CAAQ;EAC1C,MAAMC,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,CAACC,OAAf,EAAwB;MACtB,MAAMC,gBAAgB,GAAGC,MAAM,CAACD,gBAAP,IAA2B,CAApD;MACAF,UAAU,CAACC,OAAX,CAAmBG,KAAnB,GACEJ,UAAU,CAACC,OAAX,CAAmBI,WAAnB,GAAiCH,gBADnC;MAEAF,UAAU,CAACC,OAAX,CAAmBK,MAAnB,GACEN,UAAU,CAACC,OAAX,CAAmBM,YAAnB,GAAkCL,gBADpC;MAGAN,MAAM,GAAG,IAAIH,SAAJ,CAAcO,UAAU,CAACC,OAAzB,CAAT;MACA,MAAMO,IAAI,GAAG,IAAb;MAEAX,IAAI,GAAG,IAAIH,SAAJ,CAAc,IAAIC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAd,EAAyCa,IAAzC,CAAP;MACAZ,MAAM,CAACa,OAAP,CAAeZ,IAAf;MAEAA,IAAI,CAACa,QAAL;IACD;EACF,CAhBQ,EAgBN,EAhBM,CAAT;EAkBApB,SAAS,CAAC,MAAM;IACd,IAAIqB,EAAE,GAAG,CAAT;;IACA,IAAIC,UAAU,GAAG,MAAM;MACrB,IAAIC,QAAQ,GAAGd,IAAI,CAACe,IAAL,EAAf;MACA,IAAIC,GAAG,GAAG,EAAV;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,IAAI,CAACoB,SAAzB,EAAoCD,CAAC,EAArC,EAAyC;QACvCnB,IAAI,CAACqB,IAAL,CAAUF,CAAV,EAAa,IAAIH,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWP,QAAQ,CAACQ,MAAT,GAAkBL,CAAlB,GAAsBnB,IAAI,CAACoB,SAAtC,CAAD,CAAZ,GAAiEF,GAAjE,GAAwE,CAArF;MACD;;MACDJ,EAAE,GAAGW,qBAAqB,CAACV,UAAD,CAA1B;MACAhB,MAAM,CAAC2B,MAAP;IACD,CARD;;IASAZ,EAAE,GAAGW,qBAAqB,CAACV,UAAD,CAA1B;IAEA,OAAO,MAAM;MACXA,UAAU,GAAG,MAAM,CAAE,CAArB;;MACAY,oBAAoB,CAACb,EAAD,CAApB;IACD,CAHD;EAID,CAjBQ,EAiBN,CAACZ,IAAD,CAjBM,CAAT;EAmBA,MAAM0B,WAAW,GAAG;IAClBC,MAAM,EAAE;EADU,CAApB;EAIA,oBACE;IAAA,uBACE;MAAQ,KAAK,EAAED,WAAf;MAA4B,GAAG,EAAEzB;IAAjC;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAjDuBF,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}