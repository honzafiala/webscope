{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/webglAppSin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { getOverlayDirection } from \"react-bootstrap/esm/helpers\";\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet webglp;\nlet line;\nlet line2;\nlet line3;\nexport default function WebglAppSin(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const canvasMain = useRef(null);\n  useEffect(() => {\n    if (canvasMain.current) {\n      console.log(\"webgl\");\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width = canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height = canvasMain.current.clientHeight * devicePixelRatio;\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n      line = new WebglLine(new ColorRGBA(0, 1, 0, 1), numX);\n      webglp.addLine(line);\n      line.arrangeX();\n      line2 = new WebglLine(new ColorRGBA(1, 1, 0, 1), numX);\n      webglp.addLine(line2);\n      line2.arrangeX();\n      line3 = new WebglLine(new ColorRGBA(0, 0, 1, 1), numX);\n      webglp.addLine(line3);\n      line3.arrangeX();\n    }\n  }, []);\n  useEffect(() => {\n    console.log('rendering frame');\n    let id = 0;\n\n    let renderPlot = () => {\n      //  let flatData = data.flat();\n      //  let flatData2 = data.channels[1].flat();\n      //  let flatData3 = data.channels[2].flat();\n      let max = 256;\n\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, 1.3 * flatData[Math.round(flatData.length * i / line.numPoints)] / max - 0.55); //  line2.setY(i, 1.3 * flatData2[Math.round(flatData.length * i / line.numPoints)] / max  - 0.55);\n        //  line3.setY(i, 1.3 * flatData3[Math.round(flatData.length * i / line.numPoints)] / max  - 0.55);\n      }\n\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n\n    id = requestAnimationFrame(renderPlot);\n    return () => {\n      renderPlot = () => {};\n\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n  const canvasStyle = {\n    margin: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webglDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"webgl\",\n      ref: canvasMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebglAppSin, \"eerRSUIQXrqWLr9QmdFUEAin0qc=\");\n\n_c = WebglAppSin;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebglAppSin\");","map":{"version":3,"names":["React","useEffect","useRef","getOverlayDirection","WebglPlot","WebglLine","ColorRGBA","webglp","line","line2","line3","WebglAppSin","data","canvasMain","current","console","log","devicePixelRatio","window","width","clientWidth","height","clientHeight","numX","addLine","arrangeX","id","renderPlot","max","i","numPoints","setY","flatData","Math","round","length","requestAnimationFrame","update","cancelAnimationFrame","canvasStyle","margin"],"sources":["/home/honza/webusb-test/src/webglAppSin.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { getOverlayDirection } from \"react-bootstrap/esm/helpers\";\n\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\n\nimport './App.css';\n\n\nlet webglp;\nlet line;\nlet line2;\nlet line3;\n\n\nexport default function WebglAppSin({data}) {\n  const canvasMain = useRef(null);\n\n  useEffect(() => {\n    if (canvasMain.current) {\n      console.log(\"webgl\");\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width =\n        canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height =\n        canvasMain.current.clientHeight * devicePixelRatio;\n\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n\n      line = new WebglLine(new ColorRGBA(0, 1, 0, 1), numX);\n      webglp.addLine(line);\n      line.arrangeX();\n\n      line2 = new WebglLine(new ColorRGBA(1, 1, 0, 1), numX);\n      webglp.addLine(line2  );\n      line2.arrangeX();\n\n      line3 = new WebglLine(new ColorRGBA(0, 0, 1, 1), numX);\n      webglp.addLine(line3  );\n      line3.arrangeX();\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('rendering frame');\n    let id = 0;\n    let renderPlot = () => {\n    //  let flatData = data.flat();\n    //  let flatData2 = data.channels[1].flat();\n    //  let flatData3 = data.channels[2].flat();\n      let max = 256;\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, 1.3 * flatData[Math.round(flatData.length * i / line.numPoints)] / max  - 0.55);\n      //  line2.setY(i, 1.3 * flatData2[Math.round(flatData.length * i / line.numPoints)] / max  - 0.55);\n      //  line3.setY(i, 1.3 * flatData3[Math.round(flatData.length * i / line.numPoints)] / max  - 0.55);\n      }\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n    id = requestAnimationFrame(renderPlot);\n\n    return () => {\n      renderPlot = () => {};\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n\n  const canvasStyle = {\n    margin: 0,\n  };\n\n  return (\n    <div className=\"webglDiv\">\n      <canvas className=\"webgl\" ref={canvasMain} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}