{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport ChannelControl from './ChannelControl';\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\nimport Plot from './Plot.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummyData = getDummyData();\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([]);\n  let [test, setTest] = useState(0);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n    console.log(device);\n  }\n\n  function readLoop() {\n    setStart(performance.now());\n    USBDevice.transferIn(1, 32768).then(result => {\n      if (result.data.byteLength != 0) {\n        let newData = result.data; // Parse the received data\n\n        let parsedData = [];\n\n        for (let i = 0; i < result.data.byteLength; i++) {\n          let val = newData.getUint8(i);\n          parsedData.push(val);\n        } //data.push(parsedData);\n        //setData(data);\n\n\n        if (smallData.length > 100) smallData.shift();\n        smallData.push(parsedData[0]);\n        setSmallData(smallData);\n      }\n\n      if (running) readLoop();\n    });\n  }\n\n  function startCapture() {\n    running = true;\n    setRunning(true);\n    readLoop();\n  }\n\n  function str2ab(str) {\n    var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n\n    var bufView = new Uint8Array(buf);\n\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n\n    return buf;\n  }\n\n  let [clk, setClk] = useState(0);\n\n  async function sendConfig() {\n    let config = {\n      clk_div: clk\n    };\n    let str = JSON.stringify(config);\n    console.log(str);\n    let buf = str2ab(str);\n    console.log(buf);\n    let result = await USBDevice.transferOut(1, buf);\n  }\n\n  function clkChange(event) {\n    let val = parseInt(event.target.value);\n    console.log(event.target.value);\n    if (!isNaN(val)) setClk(val);\n    if (event.target.value == '') setClk(0);\n  }\n\n  function stop() {\n    running = false;\n    setRunning(false);\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n  async function readSingle() {\n    let dummy = await USBDevice.transferIn(1, 64);\n    let dummybuf = str2ab(\"dummy\");\n    let result = await USBDevice.transferOut(1, dummybuf);\n    console.log('dummy', dummy); // Read trigger index and parse\n\n    result = await USBDevice.transferIn(1, 4);\n    console.log('result', result);\n    let trigIndex = result.data.getUint32(0, true);\n    console.log('value', trigIndex);\n    USBDevice.transferIn(1, 32768 * 6).then(result => {\n      console.log(result);\n      let parsedData = [];\n\n      for (let i = 0; i < result.data.byteLength; i++) {\n        let val = result.data.getUint8(i);\n        parsedData.push(val);\n      }\n\n      data = parsedData;\n      setData(parsedData);\n      console.log(data);\n    });\n  }\n\n  let [showPlot, setShowPlot] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"dog\",\n        children: [USBDevice == null ? \"❌\" : \"✅\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectDevice,\n        children: \"Request device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        disabled: USBDevice == null,\n        children: \"read data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: readSingle,\n        disabled: USBDevice == null,\n        children: \"read single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendConfig,\n        children: \"send config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: clk,\n        size: \"5\",\n        onChange: clkChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setTest(test + 1);\n        },\n        children: \"send config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: [test, /*#__PURE__*/_jsxDEV(WebglAppSin, {\n          data: data,\n          test: test\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"1\",\n          color: \"#ffff0078\",\n          active: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"2\",\n          color: \"#00800069\",\n          active: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"3\",\n          color: \"#0000ff73\",\n          style: {\n            opacity: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GgGjrlMGEwkCh16IAt8MD/Hj7pw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WebglAppSin","ChannelControl","Button","ColorRGBA","getDummyData","HorizontalControl","HoverBox","MeasurementBox","Plot","dummyData","App","data","setData","test","setTest","smallData","setSmallData","USBDevice","setUSBDevice","captured","setCaptured","start","setStart","interval","setInterval2","running","setRunning","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","console","log","readLoop","performance","now","transferIn","then","result","byteLength","newData","parsedData","i","val","getUint8","push","length","shift","startCapture","str2ab","str","buf","ArrayBuffer","bufView","Uint8Array","strLen","charCodeAt","clk","setClk","sendConfig","config","clk_div","JSON","stringify","transferOut","clkChange","event","parseInt","target","value","isNaN","stop","clearInterval","readSingle","dummy","dummybuf","trigIndex","getUint32","showPlot","setShowPlot","opacity"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport ChannelControl from './ChannelControl';\n\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\n\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\n\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\n\nimport Plot from './Plot.js';\n\nlet dummyData = getDummyData();\n\n\n\n\nexport default function App() {\n  let [data, setData] = useState([]);\n  let [test, setTest] = useState(0);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n\n    console.log(device);\n  }\n\n\n  function readLoop() {\n    setStart(performance.now());\n    USBDevice.transferIn(1, 32768).then((result) => {\n\n\n      if (result.data.byteLength != 0) {\n      let newData = result.data;\n      // Parse the received data\n      let parsedData = [];\n      for (let i = 0; i < result.data.byteLength; i++) {\n        let val = newData.getUint8(i);\n        parsedData.push(val);\n      }\n\n        //data.push(parsedData);\n        //setData(data);\n\n\n\n      if (smallData.length > 100) smallData.shift();\n      smallData.push(parsedData[0]);\n      setSmallData(smallData);\n\n    }\n      if (running) readLoop();\n    });\n  }\n\n  function startCapture() {\n    running = true;\n    setRunning(true);\n    readLoop();\n  }\n\n  function str2ab(str) {\n    var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n    var bufView = new Uint8Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  }\n\n  let [clk, setClk] = useState(0);\n  async function sendConfig() {\n   \n\n    let config = {\n      clk_div: clk\n    };\n\n    let str = JSON.stringify(config);\n    console.log(str);\n\n    let buf = str2ab(str);\n    console.log(buf);\n    let result = await USBDevice.transferOut(1, buf);\n\n  }\n\n  function clkChange(event) {\n    let val = parseInt(event.target.value);\n    console.log(event.target.value);\n    if (!isNaN(val)) setClk(val);\n    if (event.target.value == '') setClk(0);\n  }\n\n\n  function stop() {\n    running = false;\n    setRunning(false);\n\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n\n\n  async function readSingle() {\n\n\n    let dummy = await USBDevice.transferIn(1, 64);\n    let dummybuf = str2ab(\"dummy\");\n    let result = await USBDevice.transferOut(1, dummybuf);\n    console.log('dummy', dummy);\n\n    // Read trigger index and parse\n    result = await USBDevice.transferIn(1, 4);\n    console.log('result', result);\n    let trigIndex = result.data.getUint32(0, true);\n    console.log('value', trigIndex);\n\n\n    USBDevice.transferIn(1, 32768 * 6).then((result) => {\n      console.log(result);\n\n      let parsedData = [];\n      for (let i = 0; i < result.data.byteLength; i++) {\n        let val = result.data.getUint8(i);\n        parsedData.push(val);\n      }\n\n      data = parsedData;\n      setData(parsedData);\n      console.log(data);\n    });\n  }\n\n  let [showPlot, setShowPlot] = useState(true);\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">\n      <span role=\"img\" aria-label=\"dog\">{USBDevice == null ? \"❌\" : \"✅\"} </span>\n      \n        <button onClick={connectDevice}>Request device</button>\n        <button onClick={startCapture} disabled={USBDevice == null}>read data</button>\n        <button onClick={readSingle} disabled={USBDevice == null}>read single</button>\n\n        <button onClick={stop}>stop</button>\n        <button onClick={sendConfig}>send config</button>\n        <input type=\"text\" value={clk} size=\"5\" onChange={clkChange}/>\n\n        <button onClick={() => {setTest(test + 1)}}>send config</button>\n\n\n        </div>\n      <div className=\"main\">\n        <div className='plot'>\n          {test}\n        <WebglAppSin data={data} test={test}/>\n\n        </div>\n        <div className='side'>\n          <ChannelControl number=\"1\" color=\"#ffff0078\" active=\"true\"/>\n          <ChannelControl number=\"2\" color=\"#00800069\" active=\"false\"/>\n          <ChannelControl number=\"3\" color=\"#0000ff73\" style={{opacity: 1}}/>\n         <HorizontalControl/>\n\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}