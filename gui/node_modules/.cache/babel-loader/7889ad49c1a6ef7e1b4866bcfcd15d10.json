{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([0]);\n  let [USBDevice, setUSBDevice] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    console.log(device.configuration);\n    await device.open();\n    await device.claimInterface(0);\n    console.log(\"Interface claimed\");\n    setUSBDevice(device);\n  }\n\n  function readLoop() {\n    //setInterval(readData, 1000);\n    readData();\n  }\n\n  async function readData() {\n    let result = await USBDevice.transferIn(2, 64);\n    let newData = result.data;\n    let parsedData = [];\n\n    for (let i = 0; i < 64; i++) {\n      let val = newData.getUint8(i);\n      console.log(val);\n      parsedData.push(val);\n    }\n\n    setData(data.concat(parsedData));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectDevice,\n        children: \"request device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: readLoop,\n        children: \"read data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setData([0]),\n        children: \"reset data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(WebglAppSin, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q1bETR0U9ps9oEJUh2mnOIab1bA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","App","data","setData","USBDevice","setUSBDevice","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","console","log","configuration","open","claimInterface","readLoop","readData","result","transferIn","newData","parsedData","i","val","getUint8","push","concat","width"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\nimport WebglAppSin from \"./webglAppSin\";\n\n\nexport default function App() {\n\n\n  let [data, setData] = useState([0]);\n  let [USBDevice, setUSBDevice] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    console.log(device.configuration);\n    await device.open();\n    await device.claimInterface(0);\n    console.log(\"Interface claimed\");\n    setUSBDevice(device);\n  }\n\n\n  function readLoop() {\n    //setInterval(readData, 1000);\n    readData();\n  }\n\n  async function readData() {\n    let result = await USBDevice.transferIn(2, 64);\n    let newData = result.data;\n    let parsedData = [];\n    for (let i = 0; i < 64; i++) {\n      let val = newData.getUint8(i);\n      console.log(val);\n      parsedData.push(val);\n    }\n    setData(data.concat(parsedData));\n  }\n  \n\n  return (\n    <div>\n      <div>\n        <button onClick={connectDevice}>request device</button>\n        <button onClick={readLoop}>read data</button>\n        <button onClick={() => setData([0])}>reset data</button>\n      </div>\n      <div style={{ width: \"100%\" }}>\n        <WebglAppSin data={data}/>\n      </div>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AAGA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAG5B,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA9B;EACA,IAAI,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAAxC;;EAEA,eAAeO,aAAf,GAA+B;IAC7B,IAAIC,MAAM,GAAG,MAAMC,SAAS,CAACC,GAAV,CAAcC,aAAd,CAA4B;MAAEC,OAAO,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAZ,CAAD;IAAX,CAA5B,CAAnB;IACAC,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,aAAnB;IACA,MAAMR,MAAM,CAACS,IAAP,EAAN;IACA,MAAMT,MAAM,CAACU,cAAP,CAAsB,CAAtB,CAAN;IACAJ,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACAT,YAAY,CAACE,MAAD,CAAZ;EACD;;EAGD,SAASW,QAAT,GAAoB;IAClB;IACAC,QAAQ;EACT;;EAED,eAAeA,QAAf,GAA0B;IACxB,IAAIC,MAAM,GAAG,MAAMhB,SAAS,CAACiB,UAAV,CAAqB,CAArB,EAAwB,EAAxB,CAAnB;IACA,IAAIC,OAAO,GAAGF,MAAM,CAAClB,IAArB;IACA,IAAIqB,UAAU,GAAG,EAAjB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3B,IAAIC,GAAG,GAAGH,OAAO,CAACI,QAAR,CAAiBF,CAAjB,CAAV;MACAX,OAAO,CAACC,GAAR,CAAYW,GAAZ;MACAF,UAAU,CAACI,IAAX,CAAgBF,GAAhB;IACD;;IACDtB,OAAO,CAACD,IAAI,CAAC0B,MAAL,CAAYL,UAAZ,CAAD,CAAP;EACD;;EAGD,oBACE;IAAA,wBACE;MAAA,wBACE;QAAQ,OAAO,EAAEjB,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEY,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE,MAAMf,OAAO,CAAC,CAAC,CAAD,CAAD,CAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,KAAK,EAAE;QAAE0B,KAAK,EAAE;MAAT,CAAZ;MAAA,uBACE,QAAC,WAAD;QAAa,IAAI,EAAE3B;MAAnB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9CuBD,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}