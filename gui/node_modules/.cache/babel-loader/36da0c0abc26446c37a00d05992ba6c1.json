{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport ChannelControl from './ChannelControl';\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummyData = getDummyData();\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  // let result = await USBDevice.isochronousTransferIn(2, Array(2).fill(1023));\n  let result = await USBDevice.transferIn(1, 1024 * 512);\n  console.log(result.data.length);\n\n  if (result.data == null) {\n    console.log(\"received null\");\n    return null;\n  } //console.log('received', result.data.byteLength, 'B');\n\n\n  let newData = result.data; // Parse the received data\n\n  let parsedData = [];\n\n  for (let i = 0; i < result.data.byteLength; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n\n  return parsedData;\n}\n\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n    console.log(device);\n  }\n\n  async function readData() {\n    let newData = await getData(USBDevice);\n\n    if (newData != null) {\n      data.push(newData);\n      setData(data); // console.log('read', newData.length, 'datapoints');\n\n      captured += newData.length;\n      setCaptured(captured);\n    }\n  }\n\n  function startCapture() {\n    setStart(performance.now());\n    let i = setInterval(readData, 10);\n    setInterval2(i);\n    console.log('started', i);\n  }\n\n  function startSingle() {\n    readData();\n  }\n\n  let [measId, setMeasId] = useState(0);\n  let [measurements, setMeasurements] = useState([]);\n\n  function removeMeasurement(id) {\n    console.log(measurements.map(item => item.key));\n    console.log('removing', id);\n    setMeasurements(measurements.filter(item => parseInt(item.key) !== id));\n    console.log(measurements.map(item => item.key));\n  }\n\n  function addMeasurement() {\n    setMeasurements([...measurements, /*#__PURE__*/_jsxDEV(MeasurementBox, {\n      id: measId,\n      removeMeasurement: removeMeasurement\n    }, measId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]);\n    setMeasId(measId + 1);\n    console.log(measurements.map(item => item.key));\n  }\n\n  function stop() {\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"dog\",\n        children: [USBDevice == null ? \"❌\" : \"✅\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectDevice,\n        children: \"Request device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        disabled: USBDevice == null,\n        children: \"read data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSingle,\n        disabled: USBDevice == null,\n        children: \"read single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMeasurement,\n        children: \"Add measurement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), \"Speed: \", data[0] != null && data.length * data[0].length / 1024 / ((performance.now() - start) / 1000)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: [/*#__PURE__*/_jsxDEV(WebglAppSin, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HoverBox\",\n          children: measurements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"1\",\n          color: \"#ffff0078\",\n          active: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"2\",\n          color: \"#00800069\",\n          active: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"3\",\n          color: \"#0000ff73\",\n          style: {\n            opacity: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CP4MOwDHeTpZS4Yf2MgCshdynt0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","ChannelControl","Button","ColorRGBA","getDummyData","HorizontalControl","HoverBox","MeasurementBox","dummyData","getData","USBDevice","result","transferIn","console","log","data","length","newData","parsedData","i","byteLength","val","getUint8","push","App","setData","setUSBDevice","captured","setCaptured","start","setStart","interval","setInterval2","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","readData","startCapture","performance","now","setInterval","startSingle","measId","setMeasId","measurements","setMeasurements","removeMeasurement","id","map","item","key","filter","parseInt","addMeasurement","stop","clearInterval","opacity"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport ChannelControl from './ChannelControl';\n\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\n\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\n\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\n\n\nlet dummyData = getDummyData();\n\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n // let result = await USBDevice.isochronousTransferIn(2, Array(2).fill(1023));\n  let result = await USBDevice.transferIn(1, 1024*512);\n\n  console.log(result.data.length);\n\n  if (result.data == null) {\n    console.log(\"received null\");\n    return null;\n    }\n  //console.log('received', result.data.byteLength, 'B');\n  let newData = result.data;\n  // Parse the received data\n  let parsedData = [];\n  for (let i = 0; i < result.data.byteLength; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n  return parsedData;\n}\n\n\n\n\nexport default function App() {\n  let [data, setData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n\n    console.log(device);\n  }\n\n  async function readData() {\n      let newData = await getData(USBDevice);\n      if (newData != null) {\n        data.push(newData);\n        setData(data);\n       // console.log('read', newData.length, 'datapoints');\n        captured += newData.length;\n        setCaptured(captured);\n    }\n  }\n\n  function startCapture() {\n    setStart(performance.now());\n    let i = setInterval(readData, 10);\n    setInterval2(i);\n    console.log('started', i);\n  }\n\n  function startSingle() {\n    readData();\n  }\n\n  let [measId, setMeasId] = useState(0);\n  let [measurements, setMeasurements] = useState([]);\n\n  function removeMeasurement(id) {\n    console.log(measurements.map(item => item.key));\n    console.log('removing', id);\n    setMeasurements(measurements.filter(item => \n      parseInt(item.key) !== id));\n    console.log(measurements.map(item => item.key));\n  }\n\n  function addMeasurement() {\n    setMeasurements([...measurements, \n    <MeasurementBox \n      key={measId} \n      id={measId}\n      removeMeasurement={removeMeasurement}  \n    />]);\n    setMeasId(measId + 1);\n    console.log(measurements.map(item => item.key));\n  }\n\n  function stop() {\n    clearInterval(interval);\n    console.log('stopped', interval);\n    console.log(data.length);\n  }\n\n\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">\n      <span role=\"img\" aria-label=\"dog\">{USBDevice == null ? \"❌\" : \"✅\"} </span>\n      \n        <button onClick={connectDevice}>Request device</button>\n        <button onClick={startCapture} disabled={USBDevice == null}>read data</button>\n        <button onClick={startSingle} disabled={USBDevice == null}>read single</button>\n        <button onClick={stop}>stop</button>\n\n        <button onClick={addMeasurement}>\n          Add measurement\n        </button>\n        {/* Data: {start != 0 && data.length * 256 / 1024} kB  */}\n        {/* Time: {start != 0 && (performance.now() - start) / 1000} */}\n        Speed: {data[0] != null && data.length * data[0].length / 1024 / ((performance.now() - start) / 1000)}\n\n        </div>\n      <div className=\"main\">\n        <div className='plot'>\n          <WebglAppSin data={data}/>\n          <div className=\"HoverBox\">\n            {measurements}\n            </div>\n\n        </div>\n        <div className='side'>\n          <ChannelControl number=\"1\" color=\"#ffff0078\" active=\"true\"/>\n          <ChannelControl number=\"2\" color=\"#00800069\" active=\"false\"/>\n          <ChannelControl number=\"3\" color=\"#0000ff73\" style={{opacity: 1}}/>\n         <HorizontalControl/>\n\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}