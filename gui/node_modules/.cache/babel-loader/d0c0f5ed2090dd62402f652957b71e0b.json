{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  let result = await USBDevice.transferIn(2, 64);\n  if (result.data == null) return null;\n  let newData = result.data; // Parse the received data\n\n  let parsedData = [];\n\n  for (let i = 0; i < 64; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n\n  return parsedData;\n}\n\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([0]);\n  let [USBDevice, setUSBDevice] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n    while (1) {\n      let newData = await getData(USBDevice);\n      if (newData != null) setData(data.concat(newData));\n      console.log('read', newData.length);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectDevice,\n      children: \"request device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: readData,\n      disabled: USBDevice == null,\n      children: \"read data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(WebglAppSin, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Q1bETR0U9ps9oEJUh2mnOIab1bA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","getData","USBDevice","result","transferIn","data","newData","parsedData","i","val","getUint8","push","App","setData","setUSBDevice","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","readData","concat","console","log","length","width"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  let result = await USBDevice.transferIn(2, 64);\n  if (result.data == null) return null;\n  let newData = result.data;\n  // Parse the received data\n  let parsedData = [];\n  for (let i = 0; i < 64; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n  return parsedData;\n}\n\nexport default function App() {\n  let [data, setData] = useState([0]);\n  let [USBDevice, setUSBDevice] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n    while (1) {\n      let newData = await getData(USBDevice);\n      if (newData != null) setData(data.concat(newData));\n      console.log('read', newData.length, )\n    }\n  }\n  \n  return (\n    <div>\n        <button onClick={connectDevice}>request device</button>\n        <button onClick={readData} disabled={USBDevice == null}>read data</button>\n      <div style={{ width: \"100%\" }}>\n         <WebglAppSin data={data}/>        \n      </div>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,eAAeC,OAAf,CAAuBC,SAAvB,EAAkC;EAChC;EACA,IAAIC,MAAM,GAAG,MAAMD,SAAS,CAACE,UAAV,CAAqB,CAArB,EAAwB,EAAxB,CAAnB;EACA,IAAID,MAAM,CAACE,IAAP,IAAe,IAAnB,EAAyB,OAAO,IAAP;EACzB,IAAIC,OAAO,GAAGH,MAAM,CAACE,IAArB,CAJgC,CAKhC;;EACA,IAAIE,UAAU,GAAG,EAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;IAC3B,IAAIC,GAAG,GAAGH,OAAO,CAACI,QAAR,CAAiBF,CAAjB,CAAV;IACAD,UAAU,CAACI,IAAX,CAAgBF,GAAhB;EACD;;EACD,OAAOF,UAAP;AACD;;AAED,eAAe,SAASK,GAAT,GAAe;EAAA;;EAC5B,IAAI,CAACP,IAAD,EAAOQ,OAAP,IAAkBd,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA9B;EACA,IAAI,CAACG,SAAD,EAAYY,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAAxC;;EAEA,eAAegB,aAAf,GAA+B;IAC7B,IAAIC,MAAM,GAAG,MAAMC,SAAS,CAACC,GAAV,CAAcC,aAAd,CAA4B;MAAEC,OAAO,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAZ,CAAD;IAAX,CAA5B,CAAnB;IACA,MAAML,MAAM,CAACM,IAAP,EAAN;IACA,MAAMN,MAAM,CAACO,cAAP,CAAsB,CAAtB,CAAN;IACAT,YAAY,CAACE,MAAD,CAAZ;EACD;;EAED,eAAeQ,QAAf,GAA0B;IACxB,OAAO,CAAP,EAAU;MACR,IAAIlB,OAAO,GAAG,MAAML,OAAO,CAACC,SAAD,CAA3B;MACA,IAAII,OAAO,IAAI,IAAf,EAAqBO,OAAO,CAACR,IAAI,CAACoB,MAAL,CAAYnB,OAAZ,CAAD,CAAP;MACrBoB,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBrB,OAAO,CAACsB,MAA5B;IACD;EACF;;EAED,oBACE;IAAA,wBACI;MAAQ,OAAO,EAAEb,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAES,QAAjB;MAA2B,QAAQ,EAAEtB,SAAS,IAAI,IAAlD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGE;MAAK,KAAK,EAAE;QAAE2B,KAAK,EAAE;MAAT,CAAZ;MAAA,uBACG,QAAC,WAAD;QAAa,IAAI,EAAExB;MAAnB;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA5BuBO,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}