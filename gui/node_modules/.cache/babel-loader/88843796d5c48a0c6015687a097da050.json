{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n  // let result = await USBDevice.isochronousTransferIn(2, Array(2).fill(1023));\n  let result = await USBDevice.transferIn(2, 256);\n  console.log(result);\n\n  if (result.data == null) {\n    console.log(\"received null\");\n    return null;\n  } //console.log('received', result.data.byteLength, 'B');\n\n\n  let newData = result.data; // Parse the received data\n\n  let parsedData = [];\n\n  for (let i = 0; i < result.data.byteLength; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n\n  return parsedData;\n}\n\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([[0]]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [stop, setStop] = useState(false);\n  let [captured, setCaptured] = useState(0);\n  let [startTime, setStartTime] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({\n      filters: [{\n        vendorId: 0x0\n      }]\n    });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n    let newData = await getData(USBDevice);\n\n    if (newData != null) {\n      data.push(newData);\n      setData(data);\n      console.log('read', newData.length, 'datapoints');\n      captured += newData.length;\n      setCaptured(captured);\n    }\n  }\n\n  function startCapture() {\n    setStartTime(performance.now());\n    setInterval(readData, 1000); //readData();\n  }\n\n  function startSingle() {\n    setStartTime(performance.now());\n    readData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectDevice,\n        children: \"Request device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        disabled: USBDevice == null,\n        children: \"read data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSingle,\n        disabled: USBDevice == null,\n        children: \"read single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), Math.round(captured / (performance.now() - startTime)), \" kB/s |\", Math.round(captured / 1024), \" kB |\", Math.round((performance.now() - startTime) / 1000), \" s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side\",\n        children: \"Side\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tJ/a6BjaiKyA9ipE7CXC4WPRmDo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WebglAppSin","Button","ColorRGBA","getData","USBDevice","result","transferIn","console","log","data","newData","parsedData","i","byteLength","val","getUint8","push","App","setData","setUSBDevice","stop","setStop","captured","setCaptured","startTime","setStartTime","connectDevice","device","navigator","usb","requestDevice","filters","vendorId","open","claimInterface","readData","length","startCapture","performance","now","setInterval","startSingle","Math","round"],"sources":["/home/honza/webusb-test/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\n\n\nasync function getData(USBDevice) {\n  // Read (up to) 64 bytes of data on USB endpoint 2\n // let result = await USBDevice.isochronousTransferIn(2, Array(2).fill(1023));\n  let result = await USBDevice.transferIn(2, 256);\n\n  console.log(result);\n\n  if (result.data == null) {\n    console.log(\"received null\");\n    return null;\n    }\n  //console.log('received', result.data.byteLength, 'B');\n  let newData = result.data;\n  // Parse the received data\n  let parsedData = [];\n  for (let i = 0; i < result.data.byteLength; i++) {\n    let val = newData.getUint8(i);\n    parsedData.push(val);\n  }\n  return parsedData;\n}\n\nexport default function App() {\n  let [data, setData] = useState([[0]]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [stop, setStop] = useState(false);\n  let [captured, setCaptured] = useState(0);\n  let [startTime, setStartTime] = useState(null);\n\n  async function connectDevice() {\n    let device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x0 }] });\n    await device.open();\n    await device.claimInterface(0);\n    setUSBDevice(device);\n  }\n\n  async function readData() {\n      let newData = await getData(USBDevice);\n      if (newData != null) {\n        data.push(newData);\n        setData(data);\n        console.log('read', newData.length, 'datapoints');\n        captured += newData.length;\n        setCaptured(captured);\n    }\n  }\n\n  function startCapture() {\n    setStartTime(performance.now());\n    setInterval(readData, 1000);\n    //readData();\n  }\n\n  function startSingle() {\n    setStartTime(performance.now());\n    readData();\n  }\n\n\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">\n        <button onClick={connectDevice}>Request device</button>\n        <button onClick={startCapture} disabled={USBDevice == null}>read data</button>\n        <button onClick={startSingle} disabled={USBDevice == null}>read single</button>\n        {Math.round(captured  / (performance.now() - startTime))} kB/s |\n        {Math.round(captured / 1024)} kB |\n        {Math.round((performance.now() - startTime) / 1000)} s\n        </div>\n      <div className=\"main\">\n{/* <WebglAppSin data={data}/> */}\n<div></div>\n        <div className='side'>Side</div>\n      </div>\n{/* \n      <div className=\"inner_fixed\">\n        Vert.. <button>UP</button> <button>DOWN</button>\n        <br/>\n        Horiz <button>UP</button> <button>DOWN</button>\n        <br/>\n        <button>UP</button><button>UP</button><button>UP</button><button>UP</button> \n      </div> */}\n      \n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}