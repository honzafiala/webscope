{"ast":null,"code":"var _jsxFileName = \"/home/honza/dp/gui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport WebglAppSin from \"./webglAppSin\";\nimport ChannelControl from './ChannelControl';\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\nimport Plot from './Plot.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dummyData = getDummyData();\n\nasync function serial() {\n  const port = await navigator.serial.requestPort();\n  console.log(port);\n  await port.open({\n    baudRate: 9600\n  });\n  const reader = port.readable.getReader();\n  const writer = port.writable.getWriter();\n  let buffer;\n  buffer = new ArrayBuffer([0]);\n  await writer.write(buffer);\n  buffer = new ArrayBuffer(4);\n  buffer = await read(reader, buffer);\n  let uint = new Uint32Array(buffer);\n  console.log(\"trigger:\", uint);\n  let len = 0;\n\n  while (1) {\n    buffer = new ArrayBuffer(96 * 1024 * 2);\n    buffer = await read(reader, buffer);\n    len += buffer.byteLength; //console.log(buffer);\n\n    console.log(\"rec\", len);\n    if (len == 96 * 1024 * 2) break;\n  }\n\n  console.log(buffer);\n  /*\n  // Listen to data coming from the serial device.\n    let buffer = new ArrayBuffer(4);\n  // Read the first 512 bytes.\n    buffer = await readInto(reader, buffer);\n    let uint = new Uint32Array(buffer)\n    console.log(uint);\n  \n    buffer = new ArrayBuffer(32768);\n    buffer = await readInto(reader, buffer);\n    console.log(buffer);\n    */\n}\n\nfunction ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint8Array(buf));\n}\n\nfunction str2ab(str) {\n  var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n\n  var bufView = new Uint8Array(buf);\n\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nasync function read(reader, buffer) {\n  let offset = 0;\n\n  while (offset < buffer.byteLength) {\n    const {\n      value,\n      done\n    } = await reader.read(new Uint8Array(buffer, offset));\n\n    if (done) {\n      break;\n    }\n\n    buffer = value.buffer;\n    offset += value.byteLength;\n  }\n\n  return buffer;\n}\n\nexport default function App() {\n  _s();\n\n  let [data, setData] = useState([]);\n  let [test, setTest] = useState(0);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n  let [showPlot, setShowPlot] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"dog\",\n        children: [USBDevice == null ? \"❌\" : \"✅\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: serial,\n        children: \"serial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: [test, /*#__PURE__*/_jsxDEV(WebglAppSin, {\n          data: data,\n          test: test\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"1\",\n          color: \"#ffff0078\",\n          active: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"2\",\n          color: \"#00800069\",\n          active: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelControl, {\n          number: \"3\",\n          color: \"#0000ff73\",\n          style: {\n            opacity: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QFiN1b5OxKNXEK1BTESWI11qsA0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WebglAppSin","ChannelControl","Button","ColorRGBA","getDummyData","HorizontalControl","HoverBox","MeasurementBox","Plot","dummyData","serial","port","navigator","requestPort","console","log","open","baudRate","reader","readable","getReader","writer","writable","getWriter","buffer","ArrayBuffer","write","read","uint","Uint32Array","len","byteLength","ab2str","buf","String","fromCharCode","apply","Uint8Array","str2ab","str","length","bufView","i","strLen","charCodeAt","offset","value","done","App","data","setData","test","setTest","smallData","setSmallData","USBDevice","setUSBDevice","captured","setCaptured","start","setStart","interval","setInterval2","running","setRunning","showPlot","setShowPlot","opacity"],"sources":["/home/honza/dp/gui/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nimport WebglAppSin from \"./webglAppSin\";\n\nimport ChannelControl from './ChannelControl';\n\nimport Button from 'react-bootstrap/Button';\nimport { ColorRGBA } from 'webgl-plot';\n\nimport getDummyData from './dummyData';\nimport HorizontalControl from './HorizontalControl';\n\nimport HoverBox from './HoverBox';\nimport MeasurementBox from './MeasurementBox';\n\nimport Plot from './Plot.js';\n\nlet dummyData = getDummyData();\n\nasync function serial() {\n  const port = await navigator.serial.requestPort();\n  console.log(port);\n\n  await port.open({baudRate: 9600});\n\n  const reader = port.readable.getReader();\n  const writer = port.writable.getWriter();\n\n  let buffer;\n\n  buffer = new ArrayBuffer([0]);\n  await writer.write(buffer);\n\n\n  buffer = new ArrayBuffer(4);\n  buffer = await read(reader, buffer);\n  let uint = new Uint32Array(buffer);\n  console.log(\"trigger:\", uint);\n \n\n  let len = 0;\n  while (1) {\n  buffer = new ArrayBuffer(96 * 1024 * 2);\n  buffer = await read(reader, buffer);\n  len += buffer.byteLength;\n  //console.log(buffer);\n  console.log(\"rec\", len);\n  if (len == (96*1024 * 2)) break;\n  }\n  console.log(buffer);\n\n\n/*\n// Listen to data coming from the serial device.\n  let buffer = new ArrayBuffer(4);\n// Read the first 512 bytes.\n  buffer = await readInto(reader, buffer);\n  let uint = new Uint32Array(buffer)\n  console.log(uint);\n\n  buffer = new ArrayBuffer(32768);\n  buffer = await readInto(reader, buffer);\n  console.log(buffer);\n  */\n}\nfunction ab2str(buf) {\n  return String.fromCharCode.apply(null, new Uint8Array(buf));\n}\nfunction str2ab(str) {\n  var buf = new ArrayBuffer(str.length); // 2 bytes for each char\n  var bufView = new Uint8Array(buf);\n  for (var i=0, strLen=str.length; i < strLen; i++) {\n  bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n\nasync function read(reader, buffer) {\n  let offset = 0;\n  while (offset < buffer.byteLength) {\n    const { value, done } = await reader.read(\n      new Uint8Array(buffer, offset)\n    );\n    if (done) {\n      break;\n    }\n    buffer = value.buffer;\n    offset += value.byteLength;\n  }\n  return buffer;\n}\n\n\n\n\nexport default function App() {\n  let [data, setData] = useState([]);\n  let [test, setTest] = useState(0);\n  let [smallData, setSmallData] = useState([]);\n  let [USBDevice, setUSBDevice] = useState(null);\n  let [captured, setCaptured] = useState(0);\n  let [start, setStart] = useState(0);\n  let [interval, setInterval2] = useState(0);\n  let [running, setRunning] = useState(false);\n\n  let [showPlot, setShowPlot] = useState(true);\n  return (\n    <div className=\"root\">\n      <div className=\"topbar\">\n      <span role=\"img\" aria-label=\"dog\">{USBDevice == null ? \"❌\" : \"✅\"} </span>\n      \n        <button onClick={serial}>serial</button>\n\n\n        </div>\n      <div className=\"main\">\n        <div className='plot'>\n          {test}\n        <WebglAppSin data={data} test={test}/>\n\n        </div>\n        <div className='side'>\n          <ChannelControl number=\"1\" color=\"#ffff0078\" active=\"true\"/>\n          <ChannelControl number=\"2\" color=\"#00800069\" active=\"false\"/>\n          <ChannelControl number=\"3\" color=\"#0000ff73\" style={{opacity: 1}}/>\n         <HorizontalControl/>\n\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAIC,SAAS,GAAGL,YAAY,EAA5B;;AAEA,eAAeM,MAAf,GAAwB;EACtB,MAAMC,IAAI,GAAG,MAAMC,SAAS,CAACF,MAAV,CAAiBG,WAAjB,EAAnB;EACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;EAEA,MAAMA,IAAI,CAACK,IAAL,CAAU;IAACC,QAAQ,EAAE;EAAX,CAAV,CAAN;EAEA,MAAMC,MAAM,GAAGP,IAAI,CAACQ,QAAL,CAAcC,SAAd,EAAf;EACA,MAAMC,MAAM,GAAGV,IAAI,CAACW,QAAL,CAAcC,SAAd,EAAf;EAEA,IAAIC,MAAJ;EAEAA,MAAM,GAAG,IAAIC,WAAJ,CAAgB,CAAC,CAAD,CAAhB,CAAT;EACA,MAAMJ,MAAM,CAACK,KAAP,CAAaF,MAAb,CAAN;EAGAA,MAAM,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAT;EACAD,MAAM,GAAG,MAAMG,IAAI,CAACT,MAAD,EAASM,MAAT,CAAnB;EACA,IAAII,IAAI,GAAG,IAAIC,WAAJ,CAAgBL,MAAhB,CAAX;EACAV,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBa,IAAxB;EAGA,IAAIE,GAAG,GAAG,CAAV;;EACA,OAAO,CAAP,EAAU;IACVN,MAAM,GAAG,IAAIC,WAAJ,CAAgB,KAAK,IAAL,GAAY,CAA5B,CAAT;IACAD,MAAM,GAAG,MAAMG,IAAI,CAACT,MAAD,EAASM,MAAT,CAAnB;IACAM,GAAG,IAAIN,MAAM,CAACO,UAAd,CAHU,CAIV;;IACAjB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBe,GAAnB;IACA,IAAIA,GAAG,IAAK,KAAG,IAAH,GAAU,CAAtB,EAA0B;EACzB;;EACDhB,OAAO,CAACC,GAAR,CAAYS,MAAZ;EAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AACD,SAASQ,MAAT,CAAgBC,GAAhB,EAAqB;EACnB,OAAOC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeJ,GAAf,CAAhC,CAAP;AACD;;AACD,SAASK,MAAT,CAAgBC,GAAhB,EAAqB;EACnB,IAAIN,GAAG,GAAG,IAAIR,WAAJ,CAAgBc,GAAG,CAACC,MAApB,CAAV,CADmB,CACoB;;EACvC,IAAIC,OAAO,GAAG,IAAIJ,UAAJ,CAAeJ,GAAf,CAAd;;EACA,KAAK,IAAIS,CAAC,GAAC,CAAN,EAASC,MAAM,GAACJ,GAAG,CAACC,MAAzB,EAAiCE,CAAC,GAAGC,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;IAClDD,OAAO,CAACC,CAAD,CAAP,GAAaH,GAAG,CAACK,UAAJ,CAAeF,CAAf,CAAb;EACC;;EACD,OAAOT,GAAP;AACD;;AAGD,eAAeN,IAAf,CAAoBT,MAApB,EAA4BM,MAA5B,EAAoC;EAClC,IAAIqB,MAAM,GAAG,CAAb;;EACA,OAAOA,MAAM,GAAGrB,MAAM,CAACO,UAAvB,EAAmC;IACjC,MAAM;MAAEe,KAAF;MAASC;IAAT,IAAkB,MAAM7B,MAAM,CAACS,IAAP,CAC5B,IAAIU,UAAJ,CAAeb,MAAf,EAAuBqB,MAAvB,CAD4B,CAA9B;;IAGA,IAAIE,IAAJ,EAAU;MACR;IACD;;IACDvB,MAAM,GAAGsB,KAAK,CAACtB,MAAf;IACAqB,MAAM,IAAIC,KAAK,CAACf,UAAhB;EACD;;EACD,OAAOP,MAAP;AACD;;AAKD,eAAe,SAASwB,GAAT,GAAe;EAAA;;EAC5B,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,CAAC,EAAD,CAA9B;EACA,IAAI,CAACoD,IAAD,EAAOC,OAAP,IAAkBrD,QAAQ,CAAC,CAAD,CAA9B;EACA,IAAI,CAACsD,SAAD,EAAYC,YAAZ,IAA4BvD,QAAQ,CAAC,EAAD,CAAxC;EACA,IAAI,CAACwD,SAAD,EAAYC,YAAZ,IAA4BzD,QAAQ,CAAC,IAAD,CAAxC;EACA,IAAI,CAAC0D,QAAD,EAAWC,WAAX,IAA0B3D,QAAQ,CAAC,CAAD,CAAtC;EACA,IAAI,CAAC4D,KAAD,EAAQC,QAAR,IAAoB7D,QAAQ,CAAC,CAAD,CAAhC;EACA,IAAI,CAAC8D,QAAD,EAAWC,YAAX,IAA2B/D,QAAQ,CAAC,CAAD,CAAvC;EACA,IAAI,CAACgE,OAAD,EAAUC,UAAV,IAAwBjE,QAAQ,CAAC,KAAD,CAApC;EAEA,IAAI,CAACkE,QAAD,EAAWC,WAAX,IAA0BnE,QAAQ,CAAC,IAAD,CAAtC;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAK,SAAS,EAAC,QAAf;MAAA,wBACA;QAAM,IAAI,EAAC,KAAX;QAAiB,cAAW,KAA5B;QAAA,WAAmCwD,SAAS,IAAI,IAAb,GAAoB,GAApB,GAA0B,GAA7D;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAGE;QAAQ,OAAO,EAAE7C,MAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,SAAS,EAAC,MAAf;QAAA,WACGyC,IADH,eAEA,QAAC,WAAD;UAAa,IAAI,EAAEF,IAAnB;UAAyB,IAAI,EAAEE;QAA/B;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE,QAAC,cAAD;UAAgB,MAAM,EAAC,GAAvB;UAA2B,KAAK,EAAC,WAAjC;UAA6C,MAAM,EAAC;QAApD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,cAAD;UAAgB,MAAM,EAAC,GAAvB;UAA2B,KAAK,EAAC,WAAjC;UAA6C,MAAM,EAAC;QAApD;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,cAAD;UAAgB,MAAM,EAAC,GAAvB;UAA2B,KAAK,EAAC,WAAjC;UAA6C,KAAK,EAAE;YAACgB,OAAO,EAAE;UAAV;QAApD;UAAA;UAAA;UAAA;QAAA,QAHF,eAIC,QAAC,iBAAD;UAAA;UAAA;UAAA;QAAA,QAJD;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GApCuBnB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}