{"ast":null,"code":"import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseMutationFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsMutating(arg1, arg2) {\n  var mountedRef = React.useRef(false);\n  var filters = parseMutationFilterArgs(arg1, arg2);\n  var queryClient = useQueryClient();\n\n  var _React$useState = React.useState(queryClient.isMutating(filters)),\n      isMutating = _React$useState[0],\n      setIsMutating = _React$useState[1];\n\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isMutatingRef = React.useRef(isMutating);\n  isMutatingRef.current = isMutating;\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = queryClient.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        var newIsMutating = queryClient.isMutating(filtersRef.current);\n\n        if (isMutatingRef.current !== newIsMutating) {\n          setIsMutating(newIsMutating);\n        }\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [queryClient]);\n  return isMutating;\n}","map":{"version":3,"names":["React","notifyManager","parseMutationFilterArgs","useQueryClient","useIsMutating","arg1","arg2","mountedRef","useRef","filters","queryClient","_React$useState","useState","isMutating","setIsMutating","filtersRef","current","isMutatingRef","useEffect","unsubscribe","getMutationCache","subscribe","batchCalls","newIsMutating"],"sources":["/home/honza/node_modules/react-query/es/react/useIsMutating.js"],"sourcesContent":["import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseMutationFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsMutating(arg1, arg2) {\n  var mountedRef = React.useRef(false);\n  var filters = parseMutationFilterArgs(arg1, arg2);\n  var queryClient = useQueryClient();\n\n  var _React$useState = React.useState(queryClient.isMutating(filters)),\n      isMutating = _React$useState[0],\n      setIsMutating = _React$useState[1];\n\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isMutatingRef = React.useRef(isMutating);\n  isMutatingRef.current = isMutating;\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = queryClient.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        var newIsMutating = queryClient.isMutating(filtersRef.current);\n\n        if (isMutatingRef.current !== newIsMutating) {\n          setIsMutating(newIsMutating);\n        }\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [queryClient]);\n  return isMutating;\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,uBAAT,QAAwC,eAAxC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;EACxC,IAAIC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAa,KAAb,CAAjB;EACA,IAAIC,OAAO,GAAGP,uBAAuB,CAACG,IAAD,EAAOC,IAAP,CAArC;EACA,IAAII,WAAW,GAAGP,cAAc,EAAhC;;EAEA,IAAIQ,eAAe,GAAGX,KAAK,CAACY,QAAN,CAAeF,WAAW,CAACG,UAAZ,CAAuBJ,OAAvB,CAAf,CAAtB;EAAA,IACII,UAAU,GAAGF,eAAe,CAAC,CAAD,CADhC;EAAA,IAEIG,aAAa,GAAGH,eAAe,CAAC,CAAD,CAFnC;;EAIA,IAAII,UAAU,GAAGf,KAAK,CAACQ,MAAN,CAAaC,OAAb,CAAjB;EACAM,UAAU,CAACC,OAAX,GAAqBP,OAArB;EACA,IAAIQ,aAAa,GAAGjB,KAAK,CAACQ,MAAN,CAAaK,UAAb,CAApB;EACAI,aAAa,CAACD,OAAd,GAAwBH,UAAxB;EACAb,KAAK,CAACkB,SAAN,CAAgB,YAAY;IAC1BX,UAAU,CAACS,OAAX,GAAqB,IAArB;IACA,IAAIG,WAAW,GAAGT,WAAW,CAACU,gBAAZ,GAA+BC,SAA/B,CAAyCpB,aAAa,CAACqB,UAAd,CAAyB,YAAY;MAC9F,IAAIf,UAAU,CAACS,OAAf,EAAwB;QACtB,IAAIO,aAAa,GAAGb,WAAW,CAACG,UAAZ,CAAuBE,UAAU,CAACC,OAAlC,CAApB;;QAEA,IAAIC,aAAa,CAACD,OAAd,KAA0BO,aAA9B,EAA6C;UAC3CT,aAAa,CAACS,aAAD,CAAb;QACD;MACF;IACF,CAR0D,CAAzC,CAAlB;IASA,OAAO,YAAY;MACjBhB,UAAU,CAACS,OAAX,GAAqB,KAArB;MACAG,WAAW;IACZ,CAHD;EAID,CAfD,EAeG,CAACT,WAAD,CAfH;EAgBA,OAAOG,UAAP;AACD"},"metadata":{},"sourceType":"module"}