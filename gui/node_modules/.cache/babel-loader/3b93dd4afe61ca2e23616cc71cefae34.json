{"ast":null,"code":"var _jsxFileName = \"/home/honza/webusb-test/src/webglAppSin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet webglp;\nlet line;\nexport default function WebglAppSin(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const canvasMain = useRef(null);\n  useEffect(() => {\n    if (canvasMain.current) {\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width = canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height = canvasMain.current.clientHeight * devicePixelRatio;\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n      line = new WebglLine(new ColorRGBA(1, 0, 0, 1), numX);\n      webglp.addLine(line);\n      line.arrangeX();\n    }\n  }, []);\n  useEffect(() => {\n    let id = 0;\n\n    let renderPlot = () => {\n      let packetSize = 2048;\n\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, data[Math.round(i * data.length / line.numPoints / packetSize)][Math.round(i * data.length / line.numPoints % packetSize)] / 64);\n      }\n\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n\n    id = requestAnimationFrame(renderPlot);\n    return () => {\n      renderPlot = () => {};\n\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n  const canvasStyle = {\n    width: \"100%\",\n    height: \"70vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: canvasStyle,\n      ref: canvasMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.length, \" B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebglAppSin, \"eerRSUIQXrqWLr9QmdFUEAin0qc=\");\n\n_c = WebglAppSin;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebglAppSin\");","map":{"version":3,"names":["React","useEffect","useRef","WebglPlot","WebglLine","ColorRGBA","webglp","line","WebglAppSin","data","canvasMain","current","devicePixelRatio","window","width","clientWidth","height","clientHeight","numX","addLine","arrangeX","id","renderPlot","packetSize","i","numPoints","setY","Math","round","length","requestAnimationFrame","update","cancelAnimationFrame","canvasStyle"],"sources":["/home/honza/webusb-test/src/webglAppSin.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport { WebglPlot, WebglLine, ColorRGBA } from \"webgl-plot\";\n\nlet webglp;\nlet line;\n\n\nexport default function WebglAppSin({data }) {\n  const canvasMain = useRef(null);\n\n  useEffect(() => {\n    if (canvasMain.current) {\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvasMain.current.width =\n        canvasMain.current.clientWidth * devicePixelRatio;\n      canvasMain.current.height =\n        canvasMain.current.clientHeight * devicePixelRatio;\n\n      webglp = new WebglPlot(canvasMain.current);\n      const numX = 1000;\n\n      line = new WebglLine(new ColorRGBA(1, 0, 0, 1), numX);\n      webglp.addLine(line);\n\n      line.arrangeX();\n    }\n  }, []);\n\n  useEffect(() => {\n    let id = 0;\n    let renderPlot = () => {\n     \n    let packetSize = 2048;\n      for (let i = 0; i < line.numPoints; i++) {\n        line.setY(i, data[Math.round(i * data.length/ line.numPoints / packetSize)][Math.round((i * data.length/ line.numPoints) % packetSize)] / 64);\n      }\n      id = requestAnimationFrame(renderPlot);\n      webglp.update();\n    };\n    id = requestAnimationFrame(renderPlot);\n\n    return () => {\n      renderPlot = () => {};\n      cancelAnimationFrame(id);\n    };\n  }, [data]);\n\n  const canvasStyle = {\n    width: \"100%\",\n    height: \"70vh\"\n  };\n\n  return (\n    <div>\n      <canvas style={canvasStyle} ref={canvasMain} />\n      <div>{data.length} B</div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,SAA/B,QAAgD,YAAhD;;AAEA,IAAIC,MAAJ;AACA,IAAIC,IAAJ;AAGA,eAAe,SAASC,WAAT,OAA8B;EAAA;;EAAA,IAAT;IAACC;EAAD,CAAS;EAC3C,MAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,CAACC,OAAf,EAAwB;MACtB,MAAMC,gBAAgB,GAAGC,MAAM,CAACD,gBAAP,IAA2B,CAApD;MACAF,UAAU,CAACC,OAAX,CAAmBG,KAAnB,GACEJ,UAAU,CAACC,OAAX,CAAmBI,WAAnB,GAAiCH,gBADnC;MAEAF,UAAU,CAACC,OAAX,CAAmBK,MAAnB,GACEN,UAAU,CAACC,OAAX,CAAmBM,YAAnB,GAAkCL,gBADpC;MAGAN,MAAM,GAAG,IAAIH,SAAJ,CAAcO,UAAU,CAACC,OAAzB,CAAT;MACA,MAAMO,IAAI,GAAG,IAAb;MAEAX,IAAI,GAAG,IAAIH,SAAJ,CAAc,IAAIC,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAAd,EAAyCa,IAAzC,CAAP;MACAZ,MAAM,CAACa,OAAP,CAAeZ,IAAf;MAEAA,IAAI,CAACa,QAAL;IACD;EACF,CAhBQ,EAgBN,EAhBM,CAAT;EAkBAnB,SAAS,CAAC,MAAM;IACd,IAAIoB,EAAE,GAAG,CAAT;;IACA,IAAIC,UAAU,GAAG,MAAM;MAEvB,IAAIC,UAAU,GAAG,IAAjB;;MACE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,IAAI,CAACkB,SAAzB,EAAoCD,CAAC,EAArC,EAAyC;QACvCjB,IAAI,CAACmB,IAAL,CAAUF,CAAV,EAAaf,IAAI,CAACkB,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAGf,IAAI,CAACoB,MAAT,GAAiBtB,IAAI,CAACkB,SAAtB,GAAkCF,UAA7C,CAAD,CAAJ,CAA+DI,IAAI,CAACC,KAAL,CAAYJ,CAAC,GAAGf,IAAI,CAACoB,MAAT,GAAiBtB,IAAI,CAACkB,SAAvB,GAAoCF,UAA/C,CAA/D,IAA6H,EAA1I;MACD;;MACDF,EAAE,GAAGS,qBAAqB,CAACR,UAAD,CAA1B;MACAhB,MAAM,CAACyB,MAAP;IACD,CARD;;IASAV,EAAE,GAAGS,qBAAqB,CAACR,UAAD,CAA1B;IAEA,OAAO,MAAM;MACXA,UAAU,GAAG,MAAM,CAAE,CAArB;;MACAU,oBAAoB,CAACX,EAAD,CAApB;IACD,CAHD;EAID,CAjBQ,EAiBN,CAACZ,IAAD,CAjBM,CAAT;EAmBA,MAAMwB,WAAW,GAAG;IAClBnB,KAAK,EAAE,MADW;IAElBE,MAAM,EAAE;EAFU,CAApB;EAKA,oBACE;IAAA,wBACE;MAAQ,KAAK,EAAEiB,WAAf;MAA4B,GAAG,EAAEvB;IAAjC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,WAAMD,IAAI,CAACoB,MAAX;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAnDuBrB,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}