{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = [];\n    _this.result = [];\n    _this.observers = [];\n    _this.observersMap = {};\n\n    if (queries) {\n      _this.setQueries(queries);\n    }\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries, notifyOptions) {\n    this.queries = queries;\n    this.updateObservers(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(queries) {\n    return this.findMatchingObservers(queries).map(function (match) {\n      return match.observer.getOptimisticResult(match.defaultedQueryOptions);\n    });\n  };\n\n  _proto.findMatchingObservers = function findMatchingObservers(queries) {\n    var _this3 = this;\n\n    var prevObservers = this.observers;\n    var defaultedQueryOptions = queries.map(function (options) {\n      return _this3.client.defaultQueryObserverOptions(options);\n    });\n    var matchingObservers = defaultedQueryOptions.flatMap(function (defaultedOptions) {\n      var match = prevObservers.find(function (observer) {\n        return observer.options.queryHash === defaultedOptions.queryHash;\n      });\n\n      if (match != null) {\n        return [{\n          defaultedQueryOptions: defaultedOptions,\n          observer: match\n        }];\n      }\n\n      return [];\n    });\n    var matchedQueryHashes = matchingObservers.map(function (match) {\n      return match.defaultedQueryOptions.queryHash;\n    });\n    var unmatchedQueries = defaultedQueryOptions.filter(function (defaultedOptions) {\n      return !matchedQueryHashes.includes(defaultedOptions.queryHash);\n    });\n    var unmatchedObservers = prevObservers.filter(function (prevObserver) {\n      return !matchingObservers.some(function (match) {\n        return match.observer === prevObserver;\n      });\n    });\n    var newOrReusedObservers = unmatchedQueries.map(function (options, index) {\n      if (options.keepPreviousData) {\n        // return previous data from one of the observers that no longer match\n        var previouslyUsedObserver = unmatchedObservers[index];\n\n        if (previouslyUsedObserver !== undefined) {\n          return {\n            defaultedQueryOptions: options,\n            observer: previouslyUsedObserver\n          };\n        }\n      }\n\n      return {\n        defaultedQueryOptions: options,\n        observer: _this3.getObserver(options)\n      };\n    });\n\n    var sortMatchesByOrderOfQueries = function sortMatchesByOrderOfQueries(a, b) {\n      return defaultedQueryOptions.indexOf(a.defaultedQueryOptions) - defaultedQueryOptions.indexOf(b.defaultedQueryOptions);\n    };\n\n    return matchingObservers.concat(newOrReusedObservers).sort(sortMatchesByOrderOfQueries);\n  };\n\n  _proto.getObserver = function getObserver(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var currentObserver = this.observersMap[defaultedOptions.queryHash];\n    return currentObserver != null ? currentObserver : new QueryObserver(this.client, defaultedOptions);\n  };\n\n  _proto.updateObservers = function updateObservers(notifyOptions) {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      var prevObservers = _this4.observers;\n\n      var newObserverMatches = _this4.findMatchingObservers(_this4.queries); // set options for the new observers to notify of changes\n\n\n      newObserverMatches.forEach(function (match) {\n        return match.observer.setOptions(match.defaultedQueryOptions, notifyOptions);\n      });\n      var newObservers = newObserverMatches.map(function (match) {\n        return match.observer;\n      });\n      var newObserversMap = Object.fromEntries(newObservers.map(function (observer) {\n        return [observer.options.queryHash, observer];\n      }));\n      var newResult = newObservers.map(function (observer) {\n        return observer.getCurrentResult();\n      });\n      var hasIndexChange = newObservers.some(function (observer, index) {\n        return observer !== prevObservers[index];\n      });\n\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n\n      _this4.observers = newObservers;\n      _this4.observersMap = newObserversMap;\n      _this4.result = newResult;\n\n      if (!_this4.hasListeners()) {\n        return;\n      }\n\n      difference(prevObservers, newObservers).forEach(function (observer) {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this4.onUpdate(observer, result);\n        });\n      });\n\n      _this4.notify();\n    });\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.listeners.forEach(function (listener) {\n        listener(_this5.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);","map":{"version":3,"names":["_inheritsLoose","difference","replaceAt","notifyManager","QueryObserver","Subscribable","QueriesObserver","_Subscribable","client","queries","_this","call","result","observers","observersMap","setQueries","_proto","prototype","onSubscribe","_this2","listeners","length","forEach","observer","subscribe","onUpdate","onUnsubscribe","destroy","notifyOptions","updateObservers","getCurrentResult","getOptimisticResult","findMatchingObservers","map","match","defaultedQueryOptions","_this3","prevObservers","options","defaultQueryObserverOptions","matchingObservers","flatMap","defaultedOptions","find","queryHash","matchedQueryHashes","unmatchedQueries","filter","includes","unmatchedObservers","prevObserver","some","newOrReusedObservers","index","keepPreviousData","previouslyUsedObserver","undefined","getObserver","sortMatchesByOrderOfQueries","a","b","indexOf","concat","sort","currentObserver","_this4","batch","newObserverMatches","setOptions","newObservers","newObserversMap","Object","fromEntries","newResult","hasIndexChange","hasListeners","notify","_this5","listener"],"sources":["/home/honza/node_modules/react-query/es/core/queriesObserver.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = [];\n    _this.result = [];\n    _this.observers = [];\n    _this.observersMap = {};\n\n    if (queries) {\n      _this.setQueries(queries);\n    }\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries, notifyOptions) {\n    this.queries = queries;\n    this.updateObservers(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(queries) {\n    return this.findMatchingObservers(queries).map(function (match) {\n      return match.observer.getOptimisticResult(match.defaultedQueryOptions);\n    });\n  };\n\n  _proto.findMatchingObservers = function findMatchingObservers(queries) {\n    var _this3 = this;\n\n    var prevObservers = this.observers;\n    var defaultedQueryOptions = queries.map(function (options) {\n      return _this3.client.defaultQueryObserverOptions(options);\n    });\n    var matchingObservers = defaultedQueryOptions.flatMap(function (defaultedOptions) {\n      var match = prevObservers.find(function (observer) {\n        return observer.options.queryHash === defaultedOptions.queryHash;\n      });\n\n      if (match != null) {\n        return [{\n          defaultedQueryOptions: defaultedOptions,\n          observer: match\n        }];\n      }\n\n      return [];\n    });\n    var matchedQueryHashes = matchingObservers.map(function (match) {\n      return match.defaultedQueryOptions.queryHash;\n    });\n    var unmatchedQueries = defaultedQueryOptions.filter(function (defaultedOptions) {\n      return !matchedQueryHashes.includes(defaultedOptions.queryHash);\n    });\n    var unmatchedObservers = prevObservers.filter(function (prevObserver) {\n      return !matchingObservers.some(function (match) {\n        return match.observer === prevObserver;\n      });\n    });\n    var newOrReusedObservers = unmatchedQueries.map(function (options, index) {\n      if (options.keepPreviousData) {\n        // return previous data from one of the observers that no longer match\n        var previouslyUsedObserver = unmatchedObservers[index];\n\n        if (previouslyUsedObserver !== undefined) {\n          return {\n            defaultedQueryOptions: options,\n            observer: previouslyUsedObserver\n          };\n        }\n      }\n\n      return {\n        defaultedQueryOptions: options,\n        observer: _this3.getObserver(options)\n      };\n    });\n\n    var sortMatchesByOrderOfQueries = function sortMatchesByOrderOfQueries(a, b) {\n      return defaultedQueryOptions.indexOf(a.defaultedQueryOptions) - defaultedQueryOptions.indexOf(b.defaultedQueryOptions);\n    };\n\n    return matchingObservers.concat(newOrReusedObservers).sort(sortMatchesByOrderOfQueries);\n  };\n\n  _proto.getObserver = function getObserver(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var currentObserver = this.observersMap[defaultedOptions.queryHash];\n    return currentObserver != null ? currentObserver : new QueryObserver(this.client, defaultedOptions);\n  };\n\n  _proto.updateObservers = function updateObservers(notifyOptions) {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      var prevObservers = _this4.observers;\n\n      var newObserverMatches = _this4.findMatchingObservers(_this4.queries); // set options for the new observers to notify of changes\n\n\n      newObserverMatches.forEach(function (match) {\n        return match.observer.setOptions(match.defaultedQueryOptions, notifyOptions);\n      });\n      var newObservers = newObserverMatches.map(function (match) {\n        return match.observer;\n      });\n      var newObserversMap = Object.fromEntries(newObservers.map(function (observer) {\n        return [observer.options.queryHash, observer];\n      }));\n      var newResult = newObservers.map(function (observer) {\n        return observer.getCurrentResult();\n      });\n      var hasIndexChange = newObservers.some(function (observer, index) {\n        return observer !== prevObservers[index];\n      });\n\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n\n      _this4.observers = newObservers;\n      _this4.observersMap = newObserversMap;\n      _this4.result = newResult;\n\n      if (!_this4.hasListeners()) {\n        return;\n      }\n\n      difference(prevObservers, newObservers).forEach(function (observer) {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this4.onUpdate(observer, result);\n        });\n      });\n\n      _this4.notify();\n    });\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this5 = this;\n\n    notifyManager.batch(function () {\n      _this5.listeners.forEach(function (listener) {\n        listener(_this5.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);"],"mappings":"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"},"metadata":{},"sourceType":"module"}